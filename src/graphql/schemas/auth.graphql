type AuthPayload {
  accessToken: String!
}
type LoginPayload {
  accessToken: String!
  user: User!
}
type RegisterResponse {
  message: String!
  user: User!
}

type User {
  id: ID!
  username: String!
  email: String!
}
input RegisterInput {
  username: String!
  email: String!
  password: String!
}

input LoginInput {
  username: String!
  password: String!
}
type Query {
  _empty: String
}
type Mutation {
  register(data: RegisterInput!): RegisterResponse!
  login(data: LoginInput!): LoginPayload!
  refresh: AuthPayload!
}
