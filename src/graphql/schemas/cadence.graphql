scalar JSON
scalar DateTime

type Campaign {
  id: String!
  name: String!
}

type CadenceTemplate {
  id: String!
  name: String!
  retry_dispositions: [String!]!
  cadence_days: JSON!
  created_at: DateTime!
  campaigns: [Campaign!]!
}

input CadenceDayInput {
  attempts: Int!
  time_windows: [String!]!
}

input CadenceDaysInput {
  day: String!
  config: CadenceDayInput!
}

input CreateCadenceTemplateInput {
  name: String!
  retry_dispositions: [String!]!
  cadence_days: [CadenceDaysInput!]!
}

input UpdateCadenceTemplateInput {
  id: String!
  name: String
  retry_dispositions: [String!]
  cadence_days: [CadenceDaysInput!]
}

type UserError {
  message: String
}

type CreateCadenceTemplateResponse {
  userError: UserError
  template: CadenceTemplate
}

type UpdateCadenceTemplateResponse {
  userError: UserError
  template: CadenceTemplate
}

type CadenceTemplatesResponse {
  userError: UserError
  templates: [CadenceTemplate!]
}

type DeleteCadenceTemplateResponse {
  userError: UserError
  success: Boolean!
}
type CadenceAttemptStats {
  day: Int!
  attempt: Int!
  timeWindow: String!
  executedAt: String!
  completedLeads: Int!
}

type CadenceProgressStatsResponse {
  userError: UserError
  data: [CadenceAttemptStats!]
}
type Query {
  cadenceTemplates: CadenceTemplatesResponse!
  getCadenceProgressStats(campaignId: String!): CadenceProgressStatsResponse!
}

type Mutation {
  createCadenceTemplate(
    input: CreateCadenceTemplateInput!
  ): CreateCadenceTemplateResponse!
  updateCadenceTemplate(
    input: UpdateCadenceTemplateInput!
  ): UpdateCadenceTemplateResponse!
  deleteCadenceTemplate(id: String!): DeleteCadenceTemplateResponse!
}
